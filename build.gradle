plugins {
	id 'org.springframework.boot' version '2.2.2.RELEASE'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id 'java'
	id 'war'
	id 'com.github.node-gradle.node' version '2.0.0'
}

group = 'com.amplexor'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'com.google.guava:guava:28.1-jre'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
}

node {
	version = '12.14.0'
	npmVersion = '6.13.4'
	distBaseUrl = 'https://nodejs.org/dist'
	download = true
	workDir = file("${project.projectDir}/src/client/node")
	npmWorkDir = file("${project.projectDir}/src/client/node/npm")
	nodeModulesDir = file("${project.projectDir}/src/client")
}

processResources {
	dependsOn 'npm_run_build'
}

task prepareStaticResources(type: Copy) {
	doFirst {
		delete "${project.buildDir}/resources/main/static/"
	}
	
	from "${project.projectDir}/src/client/build/"
	into "${project.buildDir}/resources/main/static/"
	
	doLast {
    	delete "${project.projectDir}/src/client/build"
    }
}

bootWar {
	dependsOn 'prepareStaticResources'
	excludeDevtools = true
    archiveFileName =  "${rootProject.name}.war"
}

clean {
	delete "${project.projectDir}/src/client/build"
}

task deploy(type: Copy) {
	dependsOn 'bootWar'
	
	doFirst {
		delete "${serverDir}${deploymentsDir}"
	}

	from file("${project.buildDir}/libs/${rootProject.name}.war")
	into "${serverDir}${deploymentsDir}"
}
